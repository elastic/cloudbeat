version: "2"
linters:
  enable:
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - errcheck
    - errname
    # - exhaustive  # Disabled to avoid requiring default statements in switches
    - exhaustruct
    - exptostd
    - fatcontext
    - gocritic
    - gocyclo
    - gomodguard
    - govet
    - iface
    - ineffassign
    - makezero
    - misspell
    - nilerr
    - nilnesserr
    - nolintlint
    - prealloc
    - predeclared
    - reassign
    - recvcheck
    - revive
    - staticcheck
    - testifylint
    - unconvert
    - unparam
    - unused
    - usetesting
    - wastedassign
    - whitespace
  settings:
    # exhaustive:
    #   default-signifies-exhaustive: true
    exhaustruct:
      include:
        - .*cloudbeat.*fetching.ResourceInfo
        - .*cloudbeat.*fetching.fetchers.*
        # Check that individual benchmarks always have their dependencies initialized
        - .*cloudbeat.*flavors.benchmark.*
        - .*cloudbeat.*governance.Subscription
        - .*cloudbeat.*governance.ManagementGroup
      exclude:
        - .*cloudbeat.*fetching.fetchers.k8s.FileCommonData
        - .*cloudbeat.*fetching.fetchers.k8s.ProcCommonData
        - .*cloudbeat.*fetching.fetchers.*<anonymous>
        - .*cloudbeat.*flavors.benchmark.*<anonymous>
    gocritic:
      settings:
        ifElseChain:
          minThreshold: 3
    gomodguard:
      blocked:
        modules:
          - github.com/pkg/errors:
              recommendations:
                - errors
              reason: Package is deprecated
    govet:
      disable:
        - fieldalignment
      enable-all: true
      settings:
        printf:
          funcs:
            - Infof
            - Debugf
            - Warnf
            - Errorf
            - Fatalf
            - Panicf
            - DPanicf
    prealloc:
      simple: true
      range-loops: true
      for-loops: false
    revive:
      enable-all-rules: true
      rules:
        - name: cognitive-complexity
          arguments:
            - 30
        - name: cyclomatic
          arguments:
            - 15
        - name: unhandled-error
          arguments:
            - bytes.Buffer.WriteString # Always returns nil error
        # Warns about blank imports - useful for detecting unused imports
        - name: blank-imports
        # Disabled: too restrictive for existing APIs, could break public interfaces
        - name: confusing-naming
          disabled: true
        # Disabled: would require massive documentation effort for all exported identifiers
        - name: exported
          disabled: true
        # Disabled: would require refactoring many existing functions
        - name: function-length
          disabled: true
        # Enforces simple getter methods (single return value)
        - name: get-return
        # Disabled: would require import alias changes across codebase
        - name: import-alias-naming
          disabled: true
        # Prevents confusing import shadows
        - name: import-shadowing
        # Improves runtime safety by requiring checked type assertions
        - name: unchecked-type-assertion
        # Disabled: pedantic naming rule, would require variable name changes across codebase
        - name: var-naming
          disabled: true
        # Disabled: can be overly pedantic and force unnecessary constants
        - name: add-constant
          disabled: true
        # Disabled: bare returns can be acceptable in short functions
        - name: bare-return
          disabled: true
        # Disabled: handled by other formatters and can be too restrictive
        - name: line-length-limit
          disabled: true
        # Disabled: can be too restrictive for legitimate use cases
        - name: max-public-structs
          disabled: true
        # Disabled: can flag legitimate interface implementations
        - name: unused-receiver
          disabled: true
        # Disabled: pedantic style rule, would require changes across large codebase
        - name: enforce-map-style
          disabled: true
        # Disabled: pedantic style rule, would require changes across large codebase
        - name: enforce-slice-style
          disabled: true
    staticcheck:
      checks:
        - "all"
        - "-QF1008"
        - "-ST1000"
        - "-ST1003"
        - "-ST1016"
        - "-ST1020"
        - "-ST1021"
        - "-ST1022"
    unused:
      field-writes-are-uses: false
      exported-fields-are-used: false
      local-variables-are-used: false
    usetesting:
      os-setenv: true
      os-temp-dir: true
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - prealloc
        path: _test\.go
      - linters:
          - prealloc
        path: resources/utils/testhelper/*.go
      # logp deprecated setup functions but has no alternative to observing logs in tests
      - linters:
          - staticcheck
        text: "SA1019: logp.(Development|Testing)Setup"
    paths:
      - third_party$
      - builtin$
      - examples$
formatters:
  enable:
    - gci
    - gofmt
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/elastic/cloudbeat)
      custom-order: false
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
