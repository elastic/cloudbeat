// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

package vulnerability

import (
	"context"
	"fmt"
	"testing"

	"github.com/elastic/cloudbeat/internal/resources/providers/awslib/ec2"
	"github.com/elastic/cloudbeat/internal/resources/utils/testhelper"
)

func TestCleaner_CleanSnapshots(t *testing.T) {
	tests := []struct {
		name         string
		snapshots    []ec2.EBSSnapshot
		providerMock func() SnapshotCleaner
	}{
		{
			name: "Provider is being called multiple times",
			providerMock: func() SnapshotCleaner {
				m := &MockSnapshotCleaner{}
				m.On("DeleteSnapshot", context.TODO(), ec2.EBSSnapshot{
					SnapshotId: "snap-1",
					Region:     "eu-west-1",
				}).Return(nil)
				m.On("DeleteSnapshot", context.TODO(), ec2.EBSSnapshot{
					SnapshotId: "snap-2",
					Region:     "eu-west-1",
				}).Return(fmt.Errorf("error"))
				return m
			},
			snapshots: []ec2.EBSSnapshot{
				{
					SnapshotId: "snap-1",
					Region:     "eu-west-1",
				},
				{
					SnapshotId: "snap-2",
					Region:     "eu-west-1",
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			f := Cleaner{
				log:      testhelper.NewLogger(t),
				provider: tt.providerMock(),
				ch:       make(chan []ec2.EBSSnapshot, 1),
			}

			f.ch <- tt.snapshots
			f.CleanSnapshots(context.TODO())
			f.provider.(*MockSnapshotCleaner).AssertExpectations(t)
		})
	}
}
