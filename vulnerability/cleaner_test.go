package vulnerability

import (
	"context"
	"fmt"
	"github.com/elastic/cloudbeat/resources/providers/awslib/ec2"
	"github.com/elastic/elastic-agent-libs/logp"
	"testing"
)

func TestCleaner_CleanSnapshots(t *testing.T) {
	tests := []struct {
		name         string
		snapshots    []ec2.EBSSnapshot
		providerMock func() SnapshotCleaner
	}{
		{
			name: "Provider is being called multiple times",
			providerMock: func() SnapshotCleaner {
				m := &MockSnapshotCleaner{}
				m.On("DeleteSnapshot", context.TODO(), ec2.EBSSnapshot{
					SnapshotId: "snap-1",
					Region:     "eu-west-1",
				}).Return(nil)
				m.On("DeleteSnapshot", context.TODO(), ec2.EBSSnapshot{
					SnapshotId: "snap-2",
					Region:     "eu-west-1",
				}).Return(fmt.Errorf("error"))
				return m
			},
			snapshots: []ec2.EBSSnapshot{
				{
					SnapshotId: "snap-1",
					Region:     "eu-west-1",
				},
				{
					SnapshotId: "snap-2",
					Region:     "eu-west-1",
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			f := Cleaner{
				log:      logp.NewLogger("Vulnerability Cleaner test"),
				provider: tt.providerMock(),
			}
			f.CleanSnapshots(context.TODO(), tt.snapshots)
			f.provider.(*MockSnapshotCleaner).AssertExpectations(t)
		})
	}
}
