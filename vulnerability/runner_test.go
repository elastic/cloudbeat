// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

package vulnerability

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"go.uber.org/goleak"

	"github.com/elastic/cloudbeat/resources/utils/testhelper"
)

func TestNewVulnerabilityRunner(t *testing.T) {
	testhelper.SkipLong(t)

	log := testhelper.NewLogger(t)
	runner, err := NewVulnerabilityRunner(log)
	defer func() {
		require.NoError(t, runner.runner.Close(context.Background()))
	}()
	require.NoError(t, err)
	assert.NotNil(t, runner)
	assert.NotNil(t, runner.log)
	assert.NotNil(t, runner.runner)
}

func TestGetRunner(t *testing.T) {
	testhelper.SkipLong(t)

	log := testhelper.NewLogger(t)
	runner, err := NewVulnerabilityRunner(log)
	defer func() {
		require.NoError(t, runner.runner.Close(context.Background()))
	}()
	require.NoError(t, err)
	assert.NotNil(t, runner)
	assert.Equal(t, runner.runner, runner.GetRunner())
}

func TestRunner_TearDown(t *testing.T) {
	// Verify no goroutines are leaking. Safest to keep this on top of the function.
	// Go defers are implemented as a LIFO stack. This should be the last one to run.
	goleak.VerifyNone(t, goleak.IgnoreCurrent())
}
