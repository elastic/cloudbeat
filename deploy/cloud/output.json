{
  "admin_console_url": {
    "sensitive": false,
    "type": "string",
    "value": "https://admin.found.no/deployments/4d3712fc8797a9b955c7b1e6b38ae167/integrations_server"
  },
  "agent_policy_id": {
    "sensitive": false,
    "type": "string",
    "value": "146e8810-86c9-11ed-9237-0d7253b6dee7"
  },
  "eks_cluster_endpoint": {
    "sensitive": false,
    "type": "string",
    "value": "https://BD429AB6593519FFA2E4F7E65E5957B7.gr7.eu-west-1.eks.amazonaws.com"
  },
  "eks_cluster_id": {
    "sensitive": false,
    "type": "string",
    "value": "cloudbeat-tf-Gfp"
  },
  "eks_cluster_name": {
    "sensitive": false,
    "type": "string",
    "value": "cloudbeat-tf-Gfp"
  },
  "eks_cluster_security_group_id": {
    "sensitive": false,
    "type": "string",
    "value": "sg-031ac0d1f1d2e00e2"
  },
  "eks_region": {
    "sensitive": false,
    "type": "string",
    "value": "eu-west-1"
  },
  "elasticsearch_password": {
    "sensitive": true,
    "type": "string",
    "value": "F0s0zcmPV2a9l9CM7aTHmYFF"
  },
  "elasticsearch_url": {
    "sensitive": false,
    "type": "string",
    "value": "https://13613f4ad86b4106923a8ca48dd62154.us-west2.gcp.elastic-cloud.com:443"
  },
  "elasticsearch_username": {
    "sensitive": true,
    "type": "string",
    "value": "elastic"
  },
  "enrollment_token": {
    "sensitive": false,
    "type": "string",
    "value": "Vi1GNFdZVUJta253Mjk4LTM4ME86Vjg1eGMxQWlUSENuYjh0X1lBYV9XUQ=="
  },
  "fleet_url": {
    "sensitive": false,
    "type": "string",
    "value": "https://4d3712fc8797a9b955c7b1e6b38ae167.fleet.us-west2.gcp.elastic-cloud.com:443"
  },
  "kibana_url": {
    "sensitive": false,
    "type": "string",
    "value": "https://52bce8740a3047ce98acbdd32dfd94b6.us-west2.gcp.elastic-cloud.com:9243"
  },
  "role_arn": {
    "sensitive": false,
    "type": "string",
    "value": "arn:aws:iam::704479110758:role/cloudbeat-tf-Gfp"
  },
  "yaml": {
    "sensitive": false,
    "type": "string",
    "value": "---\n# For more information refer to https://www.elastic.co/guide/en/fleet/current/running-on-kubernetes-managed-by-fleet.html\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: elastic-agent\n  namespace: kube-system\n  labels:\n    app: elastic-agent\nspec:\n  selector:\n    matchLabels:\n      app: elastic-agent\n  template:\n    metadata:\n      labels:\n        app: elastic-agent\n    spec:\n      # Tolerations are needed to run Elastic Agent on Kubernetes control-plane nodes.\n      # Agents running on control-plane nodes collect metrics from the control plane components (scheduler, controller manager) of Kubernetes\n      tolerations:\n        - key: node-role.kubernetes.io/control-plane\n          effect: NoSchedule\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n      serviceAccountName: elastic-agent\n      hostNetwork: true\n      # 'hostPID: true' enables the Elastic Security integration to observe all process exec events on the host.\n      # Sharing the host process ID namespace gives visibility of all processes running on the same host.\n      hostPID: true\n      dnsPolicy: ClusterFirstWithHostNet\n      containers:\n        - name: elastic-agent\n          image: docker.elastic.co/beats/elastic-agent:8.5.3\n          env:\n            # Set to 1 for enrollment into Fleet server. If not set, Elastic Agent is run in standalone mode\n            - name: FLEET_ENROLL\n              value: \"1\"\n            # Set to true to communicate with Fleet with either insecure HTTP or unverified HTTPS\n            - name: FLEET_INSECURE\n              value: \"true\"\n            # Fleet Server URL to enroll the Elastic Agent into\n            # FLEET_URL can be found in Kibana, go to Management \u003e Fleet \u003e Settings\n            - name: FLEET_URL\n              value: \"https://4d3712fc8797a9b955c7b1e6b38ae167.fleet.us-west2.gcp.elastic-cloud.com:443\"\n            # Elasticsearch API key used to enroll Elastic Agents in Fleet (https://www.elastic.co/guide/en/fleet/current/fleet-enrollment-tokens.html#fleet-enrollment-tokens)\n            # If FLEET_ENROLLMENT_TOKEN is empty then KIBANA_HOST, KIBANA_FLEET_USERNAME, KIBANA_FLEET_PASSWORD are needed\n            - name: FLEET_ENROLLMENT_TOKEN\n              value: \"Vi1GNFdZVUJta253Mjk4LTM4ME86Vjg1eGMxQWlUSENuYjh0X1lBYV9XUQ==\"\n            - name: KIBANA_HOST\n              value: \"http://kibana:5601\"\n            # The basic authentication username used to connect to Kibana and retrieve a service_token to enable Fleet\n            - name: KIBANA_FLEET_USERNAME\n              value: \"elastic\"\n            # The basic authentication password used to connect to Kibana and retrieve a service_token to enable Fleet\n            - name: KIBANA_FLEET_PASSWORD\n              value: \"changeme\"\n            - name: NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n          securityContext:\n            runAsUser: 0\n          resources:\n            limits:\n              memory: 500Mi\n            requests:\n              cpu: 100m\n              memory: 200Mi\n          volumeMounts:\n            - name: proc\n              mountPath: /hostfs/proc\n              readOnly: true\n            - name: cgroup\n              mountPath: /hostfs/sys/fs/cgroup\n              readOnly: true\n            - name: varlibdockercontainers\n              mountPath: /var/lib/docker/containers\n              readOnly: true\n            - name: varlog\n              mountPath: /var/log\n              readOnly: true\n            - name: etc-kubernetes\n              mountPath: /hostfs/etc/kubernetes\n              readOnly: true\n            - name: var-lib\n              mountPath: /hostfs/var/lib\n              readOnly: true\n            - name: passwd\n              mountPath: /hostfs/etc/passwd\n              readOnly: true\n            - name: group\n              mountPath: /hostfs/etc/group\n              readOnly: true\n            - name: etcsysmd\n              mountPath: /hostfs/etc/systemd\n              readOnly: true\n            - name: etc-mid\n              mountPath: /etc/machine-id\n              readOnly: true\n      volumes:\n        - name: proc\n          hostPath:\n            path: /proc\n        - name: cgroup\n          hostPath:\n            path: /sys/fs/cgroup\n        - name: varlibdockercontainers\n          hostPath:\n            path: /var/lib/docker/containers\n        - name: varlog\n          hostPath:\n            path: /var/log\n        # Needed for cloudbeat\n        - name: etc-kubernetes\n          hostPath:\n            path: /etc/kubernetes\n        # Needed for cloudbeat\n        - name: var-lib\n          hostPath:\n            path: /var/lib\n        # Needed for cloudbeat\n        - name: passwd\n          hostPath:\n            path: /etc/passwd\n        # Needed for cloudbeat\n        - name: group\n          hostPath:\n            path: /etc/group\n        # Needed for cloudbeat\n        - name: etcsysmd\n          hostPath:\n            path: /etc/systemd\n        # Mount /etc/machine-id from the host to determine host ID\n        # Needed for Elastic Security integration\n        - name: etc-mid\n          hostPath:\n            path: /etc/machine-id\n            type: File\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: elastic-agent\nsubjects:\n  - kind: ServiceAccount\n    name: elastic-agent\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: elastic-agent\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  namespace: kube-system\n  name: elastic-agent\nsubjects:\n  - kind: ServiceAccount\n    name: elastic-agent\n    namespace: kube-system\nroleRef:\n  kind: Role\n  name: elastic-agent\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: elastic-agent-kubeadm-config\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: elastic-agent\n    namespace: kube-system\nroleRef:\n  kind: Role\n  name: elastic-agent-kubeadm-config\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: elastic-agent\n  labels:\n    k8s-app: elastic-agent\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n      - namespaces\n      - events\n      - pods\n      - services\n      - configmaps\n      # Needed for cloudbeat\n      - serviceaccounts\n      - persistentvolumes\n      - persistentvolumeclaims\n    verbs: [\"get\", \"list\", \"watch\"]\n  # Enable this rule only if planing to use kubernetes_secrets provider\n  #- apiGroups: [\"\"]\n  #  resources:\n  #  - secrets\n  #  verbs: [\"get\"]\n  - apiGroups: [\"extensions\"]\n    resources:\n      - replicasets\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"apps\"]\n    resources:\n      - statefulsets\n      - deployments\n      - replicasets\n      - daemonsets\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/stats\n    verbs:\n      - get\n  - apiGroups: [ \"batch\" ]\n    resources:\n      - jobs\n      - cronjobs\n    verbs: [ \"get\", \"list\", \"watch\" ]\n  # Needed for apiserver\n  - nonResourceURLs:\n      - \"/metrics\"\n    verbs:\n      - get\n  # Needed for cloudbeat\n  - apiGroups: [\"rbac.authorization.k8s.io\"]\n    resources:\n      - clusterrolebindings\n      - clusterroles\n      - rolebindings\n      - roles\n    verbs: [\"get\", \"list\", \"watch\"]\n  # Needed for cloudbeat\n  - apiGroups: [\"policy\"]\n    resources:\n      - podsecuritypolicies\n    verbs: [\"get\", \"list\", \"watch\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: elastic-agent\n  # Should be the namespace where elastic-agent is running\n  namespace: kube-system\n  labels:\n    k8s-app: elastic-agent\nrules:\n  - apiGroups:\n      - coordination.k8s.io\n    resources:\n      - leases\n    verbs: [\"get\", \"create\", \"update\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: elastic-agent-kubeadm-config\n  namespace: kube-system\n  labels:\n    k8s-app: elastic-agent\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - configmaps\n    resourceNames:\n      - kubeadm-config\n    verbs: [\"get\"]\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: elastic-agent\n  namespace: kube-system\n  labels:\n    k8s-app: elastic-agent\n---\n"
  }
}
