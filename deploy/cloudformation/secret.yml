AWSTemplateFormatVersion: "2010-09-09"

Description: Test secret creation

Resources:
  RandomSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${AWS::StackName}-random-string'
      Description: Random string that persists across stack updates
      GenerateSecretString:
        SecretStringTemplate: '{}'
        GenerateStringKey: randomString
        PasswordLength: 16
        ExcludePunctuation: true

  RetrieveSecretFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          import json
          import cfnresponse

          def handler(event, context):
            if event['RequestType'] in ['Create', 'Update']:
              secret_id = event['ResourceProperties']['SecretId']
              try:
                  client = boto3.client('secretsmanager')
                  response = client.get_secret_value(SecretId=secret_id)
                  secret_string = response['SecretString']
                  secret_data = json.loads(secret_string)
                  random_string = secret_data['randomString']

                  cfnresponse.send(event, context, cfnresponse.SUCCESS,
                                  {'RandomString': random_string})
              except Exception as e:
                  print(e)
                  cfnresponse.send(event, context, cfnresponse.FAILED,
                                  {'Error': str(e)})
            else:  # Delete
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {})

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SecretAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref RandomSecret

  SecretRetriever:
    Type: Custom::SecretRetriever
    Properties:
      ServiceToken: !GetAtt RetrieveSecretFunction.Arn
      SecretId: !Ref RandomSecret

Outputs:
  RandomStringArn:
    Description: ARN of the secret containing the random string
    Value: !Ref RandomSecret

  RandomStringValue:
    Description: The generated random string
    Value: !GetAtt SecretRetriever.RandomString
