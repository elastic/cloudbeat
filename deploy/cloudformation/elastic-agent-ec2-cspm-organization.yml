AWSTemplateFormatVersion: "2010-09-09"

Description: Creates IAM roles needed for multi-account access

Parameters:
  OrganizationalUnitIds:
    Description: |
      Comma-separated list of organizational units to deploy the IAM roles to.
      Specify the unique IDs of the organizational units where the roles should be deployed.
      Example: ou-abc123,ou-def456,ou-ghi789
    Type: CommaDelimitedList
    AllowedPattern: ^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}|r-[0-9a-z]{4,32})$

  ScanManagementAccount:
    Description: |
      When set to "Yes", the Management Account resources will be scanned,
      regardless of selected Organizational Unit IDs. Likewise, when set to
      "No", the Management Account resources will not be scanned, even if
      the Management Account belongs to a selected Organizational Unit.
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
    ConstraintDescription: Must specify "Yes" or "No"

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-minimal-kernel-default-arm64

  InstanceType:
    Description: The type of EC2 instance to create
    Type: String
    AllowedValues:
      - m6g.xlarge
      - m6g.2xlarge
      - m6g.4xlarge
    Default: m6g.xlarge

  EnrollmentToken:
    Description: The enrollment token of elastic-agent
    Type: String

  FleetUrl:
    Description: The fleet URL of elastic-agent
    Type: String

  ElasticArtifactServer:
    Description: The URL of the artifact server
    Type: String
    Default: https://artifacts.elastic.co/downloads/beats/elastic-agent

  ElasticAgentVersion:
    Description: The version of elastic-agent to install
    Type: String

Conditions:
  ScanManagementAccountEnabled: !Equals
    - !Ref ScanManagementAccount
    - "Yes"

Resources:

  # Security Group for EC2 instance
  ElasticAgentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - '-'
        - - elastic-agent-security-group
          - !Select
            - 2
            - !Split
              - /
              - !Ref AWS::StackId
      GroupDescription: Block incoming traffic
      SecurityGroupIngress: []

  # IAM Role for EC2 instance and for assuming member account roles
  CloudbeatRootRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cloudbeat-root
      Description: Role that cloudbeat uses to assume roles in other accounts
      Tags:
        - Key: cloudbeat_scan_management_account
          Value: !Ref ScanManagementAccount
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action:
              - sts:AssumeRole
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: cloudbeat-root-permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:ListAccountAliases
                  - iam:ListGroup
                  - iam:ListRoles
                  - iam:ListUsers
                Resource: '*'
              - Effect: Allow
                Action:
                  - organizations:List*
                  - organizations:Describe*
                Resource: '*'
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: '*'

  # Instance profile to attach to EC2 instance
  ElasticAgentInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Join
        - '-'
        - - elastic-agent-instance-profile
          - !Select
            - 2
            - !Split
              - /
              - !Ref AWS::StackId
      Path: /
      Roles:
        - !Ref CloudbeatRootRole

  # EC2 Instance to run elastic-agent
  ElasticAgentEc2Instance:
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - elastic-agent-instance
              - !Select
                - 2
                - !Split
                  - /
                  - !Ref AWS::StackId
        - Key: Task
          Value: Organization Cloud Security Posture Management Scanner
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref ElasticAgentInstanceProfile
      SecurityGroupIds:
        - !Ref ElasticAgentSecurityGroup
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -x
          signal() {
            sudo yum install -y aws-cfn-bootstrap || { sudo apt-get update && sudo apt-get -y install python3-pip && sudo pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz; }
            cfn-signal --exit-code "$1" --stack ${AWS::StackName} --resource ElasticAgentEc2Instance --region ${AWS::Region}
          }
          is_version_valid() {
            local agent_version="$1"
            local min_version="$2"
            [[ "$min_version" = CFT_* ]] && return 0 # if the file is not published do not check
            printf '%s\n%s\n' "$min_version" "$agent_version" | sort --version-sort --check=quiet
          }
          if ! is_version_valid "${ElasticAgentVersion}" 'CFT_VERSION' &> /dev/null; then
            signal 22
            exit
          fi
          ElasticAgentArtifact=elastic-agent-${ElasticAgentVersion}-linux-arm64
          curl -L -O ${ElasticArtifactServer}/$ElasticAgentArtifact.tar.gz
          tar xzvf $ElasticAgentArtifact.tar.gz
          cd $ElasticAgentArtifact
          sudo ./elastic-agent install --non-interactive --url=${FleetUrl} --enrollment-token=${EnrollmentToken} --tag=cft_version:cloudformation-cspm-organization-account-CFT_VERSION.yml --tag=cft_arn:${AWS::StackId}
          signal $?
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 32

  CloudbeatRoleStackSet:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: cloudbeat-role-stackset
      Description: StackSet for deploying the cloudbeat-securityaudit IAM role to member accounts in the specified organizational units.
      AutoDeployment:
        Enabled: true
        RetainStacksOnAccountRemoval: false
      Capabilities:
        - CAPABILITY_NAMED_IAM
      ManagedExecution:
        Active: true
      Parameters:
        - ParameterKey: RootRoleArn
          ParameterValue: !GetAtt CloudbeatRootRole.Arn
      PermissionModel: SERVICE_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            OrganizationalUnitIds: !Ref OrganizationalUnitIds
          Regions:
            - !Ref AWS::Region
      TemplateBody: |
        AWSTemplateFormatVersion: '2010-09-09'
        Description: Creates IAM roles needed for multi-account access
        Parameters:
          RootRoleArn:
            Type: String
        Resources:
          CloudbeatMemberRole:
            Type: 'AWS::IAM::Role'
            Properties:
              RoleName: cloudbeat-securityaudit
              AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Principal:
                      AWS: !Ref RootRoleArn
                    Action:
                      - sts:AssumeRole
              Path: /
              ManagedPolicyArns:
                - arn:aws:iam::aws:policy/SecurityAudit

  CloudbeatManagementAccountAuditRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cloudbeat-securityaudit
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt CloudbeatRootRole.Arn
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
    Condition: ScanManagementAccountEnabled

Outputs:
  CloudbeatRootRoleArn:
    Description: The cloudbeat IAM role in the management account
    Value: !GetAtt CloudbeatRootRole.Arn

  Ec2InstanceId:
    Description: The EC2 instance ID
    Value: !Ref ElasticAgentEc2Instance

  Ec2InstancePublicIp:
    Description: The EC2 instance public IP
    Value: !GetAtt ElasticAgentEc2Instance.PublicIp
