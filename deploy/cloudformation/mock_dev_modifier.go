// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by mockery v2.24.0. DO NOT EDIT.

package main

import (
	cloudformation "github.com/awslabs/goformation/v7/cloudformation"
	mock "github.com/stretchr/testify/mock"
)

// mockDevModifier is an autogenerated mock type for the devModifier type
type mockDevModifier struct {
	mock.Mock
}

type mockDevModifier_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDevModifier) EXPECT() *mockDevModifier_Expecter {
	return &mockDevModifier_Expecter{mock: &_m.Mock}
}

// Modify provides a mock function with given fields: template
func (_m *mockDevModifier) Modify(template *cloudformation.Template) error {
	ret := _m.Called(template)

	var r0 error
	if rf, ok := ret.Get(0).(func(*cloudformation.Template) error); ok {
		r0 = rf(template)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockDevModifier_Modify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Modify'
type mockDevModifier_Modify_Call struct {
	*mock.Call
}

// Modify is a helper method to define mock.On call
//   - template *cloudformation.Template
func (_e *mockDevModifier_Expecter) Modify(template interface{}) *mockDevModifier_Modify_Call {
	return &mockDevModifier_Modify_Call{Call: _e.mock.On("Modify", template)}
}

func (_c *mockDevModifier_Modify_Call) Run(run func(template *cloudformation.Template)) *mockDevModifier_Modify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*cloudformation.Template))
	})
	return _c
}

func (_c *mockDevModifier_Modify_Call) Return(_a0 error) *mockDevModifier_Modify_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDevModifier_Modify_Call) RunAndReturn(run func(*cloudformation.Template) error) *mockDevModifier_Modify_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockDevModifier interface {
	mock.TestingT
	Cleanup(func())
}

// newMockDevModifier creates a new instance of mockDevModifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockDevModifier(t mockConstructorTestingTnewMockDevModifier) *mockDevModifier {
	mock := &mockDevModifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
