apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: cloudbeat
  name: cloudbeat
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: cloudbeat
  name: cloudbeat-kubeadm-config
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubeadm-config
  resources:
  - configmaps
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: cloudbeat
  name: cloudbeat-role
  namespace: kube-system
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: cloudbeat
  name: cloudbeat
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  - events
  - pods
  - services
  - configmaps
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
- nonResourceURLs:
  - /metrics
  verbs:
  - get
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  - ingresses
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cloudbeat-kubeadm-config
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cloudbeat-kubeadm-config
subjects:
- kind: ServiceAccount
  name: cloudbeat
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cloudbeat-role-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cloudbeat-role
subjects:
- kind: ServiceAccount
  name: cloudbeat
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cloudbeat
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: cloudbeat
  namespace: kube-system
---
apiVersion: v1
data:
  cloudbeat.yml: |
    cloudbeat:
      config:
        v1:
          benchmark: cis_k8s
      type:
        cloudbeat/cis_k8s
        # Defines how often an event is sent to the output
      period: 30s
      fetchers:
        - name: kube-api
        - name: process
          directory: "/hostfs"
          processes:
            etcd:
            kube-apiserver:
            kube-controller:
            kube-scheduler:
            kubelet:
              config-file-arguments:
                - config
        - name: file-system
          patterns:
            [
              "/hostfs/etc/kubernetes/scheduler.conf",
              "/hostfs/etc/kubernetes/controller-manager.conf",
              "/hostfs/etc/kubernetes/admin.conf",
              "/hostfs/etc/kubernetes/kubelet.conf",
              "/hostfs/etc/kubernetes/manifests/etcd.yaml",
              "/hostfs/etc/kubernetes/manifests/kube-apiserver.yaml",
              "/hostfs/etc/kubernetes/manifests/kube-controller-manager.yaml",
              "/hostfs/etc/kubernetes/manifests/kube-scheduler.yaml",
              "/hostfs/etc/systemd/system/kubelet.service.d/10-kubeadm.conf",
              "/hostfs/etc/kubernetes/pki/*",
              "/hostfs/var/lib/kubelet/config.yaml",
              "/hostfs/var/lib/etcd",
              "/hostfs/etc/kubernetes/pki",
            ]
    # =================================== Kibana ===================================
    setup.kibana:
      # Kibana Host
      host: "http://host.docker.internal:5601"
    # =============================== Elastic Cloud ================================

    # These settings simplify using Cloudbeat with the Elastic Cloud (https://cloud.elastic.co/).

    # The cloud.id setting overwrites the `output.elasticsearch.hosts` and
    # `setup.kibana.host` options.
    # You can find the `cloud.id` in the Elastic Cloud web UI.
    #cloud.id:

    # The cloud.auth setting overwrites the `output.elasticsearch.username` and
    # `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
    #cloud.auth:

    # ---------------------------- Elasticsearch Output ----------------------------
    output.elasticsearch:
      # Array of hosts to connect to.
      hosts: ${ES_HOST}

      # Protocol - either `http` (default) or `https`.
      #protocol: "https"

      # Authentication credentials - either API key or username/password.
      #api_key: "id:api_key"
      username: ${ES_USERNAME}
      password: ${ES_PASSWORD}

      # Enable to allow sending output to older ES versions
      allow_older_versions: true

    # ================================= Processors =================================
    processors:
      - add_host_metadata: ~
      - add_cloud_metadata: ~
      - add_docker_metadata: ~
      - add_cluster_id: ~

    # Sets log level. The default log level is info.
    # Available log levels are: error, warning, info, debug
    logging.level: debug
    # Enable debug output for selected components. To enable all selectors use ["*"]
    # Other available selectors are "beat", "publisher", "service"
    # Multiple selectors can be chained.
    #logging.selectors: ["publisher"]

    # Send all logging output to stderr. The default is false.
    #logging.to_stderr: false
kind: ConfigMap
metadata:
  labels:
    k8s-app: cloudbeat
  name: cloudbeat-daemonset-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca-cert.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNLZ0F3SUJBZ0lRVWJwbD
    grMUtWNUhoYWNqSGszazUyekFLQmdncWhrak9QUVFEQWpBZE1Sc3cKR1FZRFZRUURFeEps
    YkdGemRHbGpMWEJoWTJ0aFoyVWdRMEV3SUJjTk1qSXhNVEEyTURnMU1USXpXaGdQTWpFeQ
    pNakV3TVRNd09EVXhNak5hTUIweEd6QVpCZ05WQkFNVEVtVnNZWE4wYVdNdGNHRmphMkZu
    WlNCRFFUQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT3BLU3lYTFpKan
    hQK1Zlay9sdVUvYUovMGVWOVl3elloSDYKazhBWkZjU2JWY2oxalNGZk5RNENoSzRxNXVG
    ZDIvLzN5blFnK1JtbXlTVnFqbWp0SHNlalFqQkFNQTRHQTFVZApEd0VCL3dRRUF3SUJwak
    FQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlMxUy9oQmtCcE1uTEdlCkRq
    VU94d3BKUzRMRkZEQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUF6S2EzUmlhdnUxOE5qNG
    5SdVd0NW0vS1AKN213T2JtTDhnL09HVTRxRXVoY0NJSDQxZkNQNnVQR3FVaFd0V1I3aXQ2
    aVhXajMvbkQyaUY5Q05CK2UvWm8yUwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
kind: Secret
metadata:
  name: elastic-package-certs-ffg5hm6k7b
  namespace: kube-system
type: Opaque
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cloudbeat
  name: cloudbeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cloudbeat
  template:
    metadata:
      labels:
        k8s-app: cloudbeat
    spec:
      containers:
      - env:
        - name: ES_HOST
          value: https://elasticsearch:9200
        - name: KIBANA_HOST
          value: https://kibana:5601
        - name: SSL_CERT_DIR
          value: /etc/ssl/elastic-package
        - name: CLOUDBEAT_TYPE
          value: cloudbeat/cis_k8s
        - name: ES_USERNAME
          value: elastic
        - name: ES_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value: none
        - name: ELASTIC_CLOUD_AUTH
          value: none
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: cloudbeat:latest
        imagePullPolicy: IfNotPresent
        name: cloudbeat
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/ssl/elastic-package
          name: elastic-package-ca
          readOnly: true
        - mountPath: /cloudbeat.yml
          name: config
          readOnly: true
          subPath: cloudbeat.yml
        - mountPath: /hostfs/proc
          name: proc
          readOnly: true
        - mountPath: /hostfs/etc/kubernetes
          name: etc-kubernetes
        - mountPath: /hostfs/var/lib
          name: var-lib
          readOnly: true
        - mountPath: /hostfs/sys/fs/cgroup
          name: cgroup
          readOnly: true
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
        - mountPath: /hostfs/etc/passwd
          name: passwd
          readOnly: true
        - mountPath: /hostfs/etc/group
          name: group
          readOnly: true
        - mountPath: /hostfs/etc/systemd
          name: etcsysmd
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: cloudbeat
      terminationGracePeriodSeconds: 30
      volumes:
      - name: elastic-package-ca
        secret:
          defaultMode: 420
          secretName: elastic-package-certs-ffg5hm6k7b
      - hostPath:
          path: /proc
        name: proc
      - hostPath:
          path: /etc/kubernetes
        name: etc-kubernetes
      - hostPath:
          path: /var/lib
        name: var-lib
      - hostPath:
          path: /etc/passwd
        name: passwd
      - hostPath:
          path: /etc/group
        name: group
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroup
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /etc/systemd
        name: etcsysmd
      - configMap:
          defaultMode: 416
          name: cloudbeat-daemonset-config
        name: config
