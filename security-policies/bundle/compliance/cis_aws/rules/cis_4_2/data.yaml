metadata:
  id: c40bebb5-5403-59d8-b960-00d6946931ce
  name: Ensure a log metric filter and alarm exist for Management Console sign-in
    without MFA
  profile_applicability: '* Level 1'
  description: |-
    Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms.
    It is recommended that a metric filter and alarm be established for console logins that are not protected by multi-factor authentication (MFA).
  rationale: |-
    Monitoring for single-factor console logins will increase visibility into accounts that are not protected by MFA.
  audit: |-
    Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:

    1. Identify the log group name configured for use with active multi-region CloudTrail:

    - List all `CloudTrails`:

    ```
    aws cloudtrail describe-trails
    ```

    - Identify Multi region Cloudtrails: `Trails with "IsMultiRegionTrail" set to true`

    - From value associated with CloudWatchLogsLogGroupArn note `<cloudtrail_log_group_name>`

    Example: for CloudWatchLogsLogGroupArn that looks like `arn:aws:logs:<region>:<aws_account_number>:log-group:NewGroup:*`, `<cloudtrail_log_group_name>` would be `NewGroup`

    - Ensure Identified Multi region `CloudTrail` is active

    ```
    aws cloudtrail get-trail-status --name <Name of a Multi-region CloudTrail>
    ```

    Ensure in the output that `IsLogging` is set to `TRUE`

    - Ensure identified Multi-region 'Cloudtrail' captures all Management Events

    ```
    aws cloudtrail get-event-selectors --trail-name <trailname shown in describe-trails>
    ```

    Ensure in the output there is at least one Event Selector for a Trail with `IncludeManagementEvents` set to `true` and `ReadWriteType` set to `All`

    2. Get a list of all associated metric filters for this `<cloudtrail_log_group_name>`:
    ```
    aws logs describe-metric-filters --log-group-name "<cloudtrail_log_group_name>"
    ```
    3. Ensure the output from the above command contains the following:
    ```
    "filterPattern": "{ ($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes") }"
    ```

    Or (To reduce false positives incase Single Sign-On (SSO) is used in organization):

    ```
    "filterPattern": "{ ($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes") && ($.userIdentity.type = "IAMUser") && ($.responseElements.ConsoleLogin = "Success") }"
    ```

    4. Note the `<no_mfa_console_signin_metric>` value associated with the `filterPattern` found in step 3.

    5. Get a list of CloudWatch alarms and filter on the `<no_mfa_console_signin_metric>` captured in step 4.

    ```
    aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `<no_mfa_console_signin_metric>`]'
    ```
    6. Note the `AlarmActions` value - this will provide the SNS topic ARN value.

    7. Ensure there is at least one active subscriber to the SNS topic
    ```
    aws sns list-subscriptions-by-topic --topic-arn <sns_topic_arn> 
    ```
    at least one subscription should have "SubscriptionArn" with valid aws ARN.
    ```
    Example of valid "SubscriptionArn": "arn:aws:sns:<region>:<aws_account_number>:<SnsTopicName>:<SubscriptionID>"
    ```
  remediation: |-
    Perform the following to setup the metric filter, alarm, SNS topic, and subscription:

    1. Create a metric filter based on filter pattern provided which checks for AWS Management Console sign-in without MFA and the `<cloudtrail_log_group_name>` taken from audit step 1.

    Use Command: 

    ```
    aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<no_mfa_console_signin_metric>` --metric-transformations metricName= `<no_mfa_console_signin_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes") }'
    ```

    Or (To reduce false positives incase Single Sign-On (SSO) is used in organization):

    ```
    aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name> --filter-name `<no_mfa_console_signin_metric>` --metric-transformations metricName= `<no_mfa_console_signin_metric>` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes") && ($.userIdentity.type = "IAMUser") && ($.responseElements.ConsoleLogin = "Success") }'
    ```

    **Note**: You can choose your own metricName and metricNamespace strings.
    Using the same metricNamespace for all Foundations Benchmark metrics will group them together.

    2. Create an SNS topic that the alarm will notify
    ```
    aws sns create-topic --name <sns_topic_name>
    ```

    **Note**: you can execute this command once and then re-use the same topic for all monitoring alarms.

    3. Create an SNS subscription to the topic created in step 2
    ```
    aws sns subscribe --topic-arn <sns_topic_arn> --protocol <protocol_for_sns> --notification-endpoint <sns_subscription_endpoints>
    ```

    **Note**: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.

    4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2
    ```
    aws cloudwatch put-metric-alarm --alarm-name `<no_mfa_console_signin_alarm>` --metric-name `<no_mfa_console_signin_metric>` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>
    ```
  impact: ''
  default_value: ''
  references: |-
    1. https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/viewing_metrics_with_cloudwatch.html
    2. https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html
    3. https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudwatch-alarms-for-cloudtrail.html
    4. https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html
  section: Monitoring
  version: '1.0'
  tags:
  - CIS
  - AWS
  - CIS 4.2
  - Monitoring
  benchmark:
    name: CIS Amazon Web Services Foundations
    version: v1.5.0
    id: cis_aws
    rule_number: '4.2'
    posture_type: cspm
