// Code generated by mockery v2.14.0. DO NOT EDIT.

package awslib

import (
	context "context"

	aws "github.com/aws/aws-sdk-go-v2/aws"

	ec2metadata "github.com/aws/aws-sdk-go-v2/aws/ec2metadata"

	mock "github.com/stretchr/testify/mock"
)

// MockMetadataGetter is an autogenerated mock type for the MetadataGetter type
type MockMetadataGetter struct {
	mock.Mock
}

type MockMetadataGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMetadataGetter) EXPECT() *MockMetadataGetter_Expecter {
	return &MockMetadataGetter_Expecter{mock: &_m.Mock}
}

// GetMetadata provides a mock function with given fields: ctx, cfg
func (_m *MockMetadataGetter) GetMetadata(ctx context.Context, cfg aws.Config) (ec2metadata.EC2InstanceIdentityDocument, error) {
	ret := _m.Called(ctx, cfg)

	var r0 ec2metadata.EC2InstanceIdentityDocument
	if rf, ok := ret.Get(0).(func(context.Context, aws.Config) ec2metadata.EC2InstanceIdentityDocument); ok {
		r0 = rf(ctx, cfg)
	} else {
		r0 = ret.Get(0).(ec2metadata.EC2InstanceIdentityDocument)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, aws.Config) error); ok {
		r1 = rf(ctx, cfg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockMetadataGetter_GetMetadata_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMetadata'
type MockMetadataGetter_GetMetadata_Call struct {
	*mock.Call
}

// GetMetadata is a helper method to define mock.On call
//  - ctx context.Context
//  - cfg aws.Config
func (_e *MockMetadataGetter_Expecter) GetMetadata(ctx interface{}, cfg interface{}) *MockMetadataGetter_GetMetadata_Call {
	return &MockMetadataGetter_GetMetadata_Call{Call: _e.mock.On("GetMetadata", ctx, cfg)}
}

func (_c *MockMetadataGetter_GetMetadata_Call) Run(run func(ctx context.Context, cfg aws.Config)) *MockMetadataGetter_GetMetadata_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(aws.Config))
	})
	return _c
}

func (_c *MockMetadataGetter_GetMetadata_Call) Return(_a0 ec2metadata.EC2InstanceIdentityDocument, _a1 error) *MockMetadataGetter_GetMetadata_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewMockMetadataGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockMetadataGetter creates a new instance of MockMetadataGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockMetadataGetter(t mockConstructorTestingTNewMockMetadataGetter) *MockMetadataGetter {
	mock := &MockMetadataGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
