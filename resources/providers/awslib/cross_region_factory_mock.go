// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by mockery v2.15.0. DO NOT EDIT.

package awslib

import (
	aws "github.com/aws/aws-sdk-go-v2/aws"
	logp "github.com/elastic/elastic-agent-libs/logp"

	mock "github.com/stretchr/testify/mock"
)

// MockCrossRegionFactory is an autogenerated mock type for the CrossRegionFactory type
type MockCrossRegionFactory[T interface{}] struct {
	mock.Mock
}

// NewMultiRegionClients provides a mock function with given fields: client, cfg, factory, log
func (_m *MockCrossRegionFactory[T]) NewMultiRegionClients(client DescribeCloudRegions, cfg aws.Config, factory func(aws.Config) T, log *logp.Logger) CrossRegionFetcher[T] {
	ret := _m.Called(client, cfg, factory, log)

	var r0 CrossRegionFetcher[T]
	if rf, ok := ret.Get(0).(func(DescribeCloudRegions, aws.Config, func(aws.Config) T, *logp.Logger) CrossRegionFetcher[T]); ok {
		r0 = rf(client, cfg, factory, log)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CrossRegionFetcher[T])
		}
	}

	return r0
}

type mockConstructorTestingTNewMockCrossRegionFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockCrossRegionFactory creates a new instance of MockCrossRegionFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockCrossRegionFactory[T interface{}](t mockConstructorTestingTNewMockCrossRegionFactory) *MockCrossRegionFactory[T] {
	mock := &MockCrossRegionFactory[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
