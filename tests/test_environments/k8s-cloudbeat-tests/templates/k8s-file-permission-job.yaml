{{- if .Values.k8sFiles.deploy -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: update-file-permissions
  namespace: kube-system
  annotations:
    "helm.sh/hook": "pre-install"
spec:
  template:
    spec:
      containers:
      - name: update-file-permissions
        image: busybox:latest
        command:
        - /bin/sh
        - -c
        - |
          # File failure cases:
          # 1.1.1
          chmod 700 /etc/kubernetes/manifests/kube-apiserver.yaml
          # 1.1.2
          chown daemon:daemon /etc/kubernetes/manifests/kube-apiserver.yaml
          # 1.1.3
          chmod 700 /etc/kubernetes/manifests/kube-controller-manager.yaml
          # 1.1.4
          chown root:daemon /etc/kubernetes/manifests/kube-controller-manager.yaml
          # 1.1.5
          chmod 700 /etc/kubernetes/manifests/kube-scheduler.yaml
          # 1.1.6
          chown root:daemon /etc/kubernetes/manifests/kube-scheduler.yaml
          # 1.1.7
          chmod 700 /etc/kubernetes/manifests/etcd.yaml
          # 1.1.8
          chown root:daemon /etc/kubernetes/manifests/etcd.yaml
          # 1.1.11
          chmod 777 /var/lib/etcd
          # 1.1.12
          # Update files directly
          # TODO: check why this is not working
          echo "etcd:x:1000:" | tee -a /etc/group
          echo "etcd:x:1000:1000::/home/etcd:/bin/sh" | tee -a /etc/passwd
          chown etcd:etcd /var/lib/etcd
          # 1.1.13
          chmod 700 /etc/kubernetes/admin.conf
          # 1.1.14
          chown daemon:root /etc/kubernetes/admin.conf
          # 1.1.15
          chmod 700 /etc/kubernetes/scheduler.conf
          # 1.1.16
          chown daemon:root /etc/kubernetes/scheduler.conf
          # 1.1.17
          chmod 700 /etc/kubernetes/controller-manager.conf
          # 1.1.18
          chown root:daemon /etc/kubernetes/controller-manager.conf
          # 1.1.19
          chown root:daemon /etc/kubernetes/pki
          # 1.1.19
          touch /etc/kubernetes/pki/some_file.txt
          chown root:daemon /etc/kubernetes/pki/some_file.txt
          mkdir -p /etc/kubernetes/pki/some_dir
          chown daemon:daemon /etc/kubernetes/pki/some_dir
          touch /etc/kubernetes/pki/some_dir/some_file.txt
          touch daemon:daemon /etc/kubernetes/pki/some_dir/some_file.txt
          # 1.1.20
          chmod 666 /etc/kubernetes/pki/apiserver.crt
          # 1.1.21
          chmod 644 /etc/kubernetes/pki/apiserver.key
          # 4.1.1
          chmod 700 /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
          # 4.1.2
          chown root:daemon /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
          # 4.1.5
          chmod 700 /etc/kubernetes/kubelet.conf
          # 4.1.6
          chown daemon:root /etc/kubernetes/kubelet.conf
          # 4.1.9
          chmod 700 /var/lib/kubelet/config.yaml
          # 4.1.10
          chown daemon:root /etc/kubernetes/kubelet.conf
        volumeMounts:
          - name: etc-kubernetes
            mountPath: /etc/kubernetes/
            readOnly: false
          - name: etc-full
            mountPath: /hostfs/etc
            readOnly: false
          - name: var-lib-etcd
            mountPath: /var/lib/etcd
            readOnly: false
          - name: kubelet-service
            mountPath: /etc/systemd/system/kubelet.service.d
            readOnly: false
          - name: var-lib-kubelet
            mountPath: /var/lib/kubelet
            readOnly: false
      restartPolicy: Never
      nodeSelector:
        test-node-1: "fail"  # Target the control plane node
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"  # Tolerate the existing taint
      volumes:
      - name: etc-kubernetes
        hostPath:
          path: /etc/kubernetes/  # Mount the directory containing etcd.yaml
      - name: etc-full
        hostPath:
          path: /etc/
      - name: var-lib-etcd
        hostPath:
          path: /var/lib/etcd
          type: DirectoryOrCreate
      - name: kubelet-service
        hostPath:
          path: /etc/systemd/system/kubelet.service.d
      - name: var-lib-kubelet
        hostPath:
          path: /var/lib/kubelet
{{- end }}
