name: "Run Kibana FTR"
description: "Run Kibana tests using FTR"

inputs:
  test_kibana_url:
    description: "URL for the Kibana instance to test"
    required: true
  test_es_url:
    description: "URL for the ES instance"
    required: true
  es_version:
    description: "Version of Elasticsearch to test against"
    required: true
  kibana_ref:
    description: "Kibana PR commit sha"
    required: false
    default: "main"
  serverless_mode:
    description: "Run tests in serverless mode"
    required: false
    default: "false"
  ftr_user:
    description: "User for FTR tests (required for serverless)"
    required: false
    default: "admin"
  ftr_password:
    description: "Password for FTR tests (required for serverless)"
    required: false
  ftr_email:
    description: "Email for FTR tests (required for serverless)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Set global variables
      id: globals
      shell: bash
      run: |
        echo "KIBANA_DIR=kibana" >> "${GITHUB_OUTPUT}"

    - name: Checkout Kibana Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: elastic/kibana
        ref: ${{ inputs.kibana_ref }}
        fetch-depth: 1
        path: ${{ steps.globals.outputs.KIBANA_DIR }}

    - name: Setup Node
      uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
      with:
        node-version-file: ${{ steps.globals.outputs.KIBANA_DIR }}/package.json

    - name: Bootstrap Kibana
      shell: bash
      working-directory: ${{ steps.globals.outputs.KIBANA_DIR }}
      env:
        ES_VERSION: ${{ inputs.es_version }}
      run: |
        if [[ $ES_VERSION == 8.19* ]]; then
          echo "Bootstrapping Kibana..."
          yarn kbn bootstrap --force-install --no-validation || echo "⚠️ yarn kbn bootstrap failed, continuing..."
          yarn kbn clean && yarn kbn reset || echo "⚠️ yarn kbn reset failed, continuing..."
        fi
        yarn kbn bootstrap

    - name: Set test configuration
      shell: bash
      env:
        SERVERLESS_MODE: ${{ inputs.serverless_mode }}
      run: |
        echo "TEST_CONFIG=x-pack/solutions/security/test/cloud_security_posture_functional/config.cloud.ts" >> $GITHUB_ENV
        if [ "$SERVERLESS_MODE" = "true" ]; then
          echo "TEST_CONFIG=x-pack/solutions/security/test/serverless/functional/configs/config.cloud_security_posture.cloud.ts" >> $GITHUB_ENV
        fi

    - name: Create FTR role users
      if: ${{ inputs.serverless_mode == 'true' }}
      shell: bash
      working-directory: ${{ steps.globals.outputs.KIBANA_DIR }}
      env:
        FTR_USER: ${{ inputs.ftr_user }}
        FTR_PASSWORD: ${{ inputs.ftr_password }}
        FTR_EMAIL: ${{ inputs.ftr_email }}
      run: |
        umask 077
        mkdir -p .ftr
        jq -n --arg user "$FTR_USER" --arg password "$FTR_PASSWORD" --arg email "$FTR_EMAIL" \
          '{($user): {password: $password, email: $email}}' > .ftr/role_users.json
        chmod 600 .ftr/role_users.json

    - name: Run FTR
      if: success()
      shell: bash
      working-directory: ${{ steps.globals.outputs.KIBANA_DIR }}
      env:
        TEST_KIBANA_URL: ${{ inputs.test_kibana_url }}
        TEST_ES_URL: ${{ inputs.test_es_url }}
        ES_VERSION: ${{ inputs.es_version }}
        TEST_CLOUD: "1"
        ES_SECURITY_ENABLED: "1"
        TEST_BROWSER_HEADLESS: "1"
        TEST_CLOUD_HOST_NAME: "cloud.elastic.co"
        TEST_CONFIG: ${{ env.TEST_CONFIG }}
      run: |
        node scripts/functional_test_runner --config "$TEST_CONFIG" --es-version "$ES_VERSION"

    - name: Cleanup credentials
      if: always() && inputs.serverless_mode == 'true'
      shell: bash
      working-directory: ${{ steps.globals.outputs.KIBANA_DIR }}
      run: |
        rm -f .ftr/role_users.json
        rmdir .ftr 2>/dev/null || true
