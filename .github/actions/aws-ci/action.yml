name: 'AWS CI'
description: 'AWS integration tests'
inputs:
  elk-version:
    description: 'ELK version'
    required: true
  aws-access-key-id:
    description: 'AWS access key id'
    required: true
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: true
  aws-account-type:
    description: 'AWS account type'
    required: false
    default: single-account
runs:
  using: composite
  steps:
    - name: Build cloudbeat binary
      shell: bash
      run: mage -v build

    - name: Run elasticsearch
      uses: elastic/elastic-github-actions/elasticsearch@master
      with:
        stack-version: ${{ inputs.elk-version }}
        security-enabled: false

    - name: Elasticsearch disable dynamic mapping for findings
      shell: bash
      run: ./.ci/scripts/disable_dynamic_mapping.sh

    - name: Run cloudbeat in background
      env:
        ES_HOST: http://localhost:9200
        ES_USERNAME: elastic
        ES_PASSWORD: changeme
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        AWS_ACCOUNT_TYPE: ${{ inputs.aws-account-type }}
      shell: bash
      run: |
        ./cloudbeat -c deploy/aws/cloudbeat-aws.yml -d '*' &

    - name: Wait for cloudbeat to send some events
      shell: bash
      run: sleep 20

    - name: Check for findings
      working-directory: ./tests
      env:
        USE_K8S: "false"
      shell: bash
      run: poetry run pytest -k "aws" --alluredir=./allure/results/ --clean-alluredir

    - name: Upload test results
      if: ${{ success() || failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-ci-aws
        path: tests/allure/results/

    # - name: Print cloudbeat logs
    #   if: always()
    #   shell: bash
    #   run: |
    #     cat logs/cloudbeat*
    # - name: Upload cloudbeat logs
    #   if: always()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: cloubeat-logs-ci-azure
    #     path: logs/
