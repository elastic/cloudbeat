name: 'Azure CI'
description: 'Azure integration tests'
inputs:
  elk-version:
    description: 'ELK version'
    required: true
  azure-client-id:
    description: 'Azure client id'
    required: true
  azure-tenant-id:
    description: 'Azure tenant id'
    required: true
  azure-client-secret:
    description: 'Azure client secret'
    required: true

  debug:
    description: 'debug'
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - name: Init Integration
      uses: ./.github/actions/init-integration
      with:
        elk-version: ${{ inputs.elk-version }}

    - name: Run cloudbeat in background
      env:
        ES_HOST: http://localhost:9200
        ES_USERNAME: elastic
        ES_PASSWORD: changeme
        AZURE_ACCOUNT_TYPE: single-account
        AZURE_CREDENTIALS_TYPE: service_principal_with_client_secret
        AZURE_CLIENT_ID: ${{ inputs.azure-client-id }}
        AZURE_TENANT_ID: ${{ inputs.azure-tenant-id }}
        AZURE_CLIENT_SECRET: ${{ inputs.azure-client-secret }}
      shell: bash
      run: |
        ./cloudbeat -c deploy/azure/cloudbeat-azure.yml -d '*' &

    - name: Wait for cloudbeat to send some events
      shell: bash
      run: sleep 15

    - name: Check for findings
      working-directory: ./tests
      env:
        USE_K8S: "false"
      shell: bash
      run: poetry run pytest -k "azure" --alluredir=./allure/results/ --clean-alluredir

    - name: Upload test results
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-ci-azure
        path: tests/allure/results/
        overwrite: true

    - if: ${{ failure() || cancelled() || inputs.debug == 'true' }}
      name: Upload cloudbeat logs
      uses: actions/upload-artifact@v4
      with:
        name: cloubeat-logs-ci-azure
        path: logs/
        if-no-files-found: warn
        retention-days: 1
        overwrite: true
