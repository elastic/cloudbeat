name: 'GCP CI'
description: 'GCP integration tests'
inputs:
  elk-version:
    description: 'ELK version'
    required: true
  workload-identity-provider:
    description: 'workload identity provider'
    required: true
  service-account:
    description: 'workload identity provider'
    required: true
  gcp-project-id:
    description: 'gcp project id'
    required: true
  gcp-account-type:
    description: 'gcp account type'
    required: true

  debug:
    description: 'debug'
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - name: Init Integration
      uses: ./.github/actions/init-integration
      with:
        elk-version: ${{ inputs.elk-version }}

    - id: google-auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ inputs.workload-identity-provider }}
        service_account: ${{ inputs.service-account }}

    - name: Run cloudbeat in background
      env:
        ES_HOST: http://localhost:9200
        ES_USERNAME: elastic
        ES_PASSWORD: changeme
        GCP_PROJECT_ID: ${{ inputs.gcp-project-id }}
        GCP_ACCOUNT_TYPE: ${{ inputs.gcp-account-type }}
      shell: bash
      run: ./cloudbeat -c deploy/gcp/cloudbeat-gcp.yml -d '*' &

    - name: Check for findings
      working-directory: ./tests
      env:
        USE_K8S: "false"
      shell: bash
      run: |
        poetry install
        poetry run pytest -k "cspm_gcp" --alluredir=./allure/results/ --clean-alluredir --maxfail=4

    - name: Upload test results
      if: ${{ success() || failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-ci-gcp
        path: tests/allure/results/

    - if: ${{ (success() || failure()) && inputs.debug == 'true' }}
      name: Upload cloudbeat logs
      uses: actions/upload-artifact@v4
      with:
        name: cloubeat-logs-ci-gcp
        path: logs/
