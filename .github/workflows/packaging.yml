name: Packaging

on:
  pull_request:
    branches:
      - main
      - '[0-9]+.[0-9]+'
    types: [opened, synchronize, reopened]

env:
  DEV: true
  SNAPSHOT: true
  PLATFORMS: linux/amd64
  GOPATH: /home/runner/go

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  packag_beat:
    name: Package Cloudbeat
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        types: [ tar.gz, docker ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Fetch Go version from .go-version
        run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV

      - name: Fetch OPA version
        run: echo "OPA_VERSION=$(go list -m -f {{.Version}} github.com/open-policy-agent/opa | sed 's/v//')" >> $GITHUB_ENV

      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v1
        with:
          version: ${{ env.OPA_VERSION }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Mage
        run: |
          git clone https://github.com/magefile/mage
          cd mage
          go run bootstrap.go
          mage -version

      - name: cache go dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Packaging
        run: |
          mage -v package
        env:
          TYPES: ${{ matrix.types }}
