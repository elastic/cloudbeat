name: CI

on:
  pull_request:
    branches:
      - main
      - "[0-9]+.[0-9]+"
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - "[0-9]+.[0-9]+"
  workflow_dispatch:

jobs:
  init-hermit:
    name: Init Hermit Tools
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Hermit Environment
        uses: ./.github/actions/hermit

  ci-azure:
    needs: [ init-hermit ]
    name: Integrations Tests CIS Azure
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Hermit Environment
        uses: ./.github/actions/hermit

      - name: Run Azure integration tests
        uses: ./.github/actions/azure-ci
        with:
          elk-version: ${{ env.ELK_VERSION }}
          azure-client-id: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
          azure-tenant-id: ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}
          azure-client-secret: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}

  ci-cnvm:
    needs: [ init-hermit ]
    name: Integration Tests CNVM
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Hermit Environment
        uses: ./.github/actions/hermit

      - name: Run CNVM integration tests
        uses: ./.github/actions/cnvm-ci
        with:
          elk-version: ${{ env.ELK_VERSION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-2'

  ci-gcp:
    needs: [ init-hermit ]
    name: Integration Tests GCP
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Hermit Environment
        uses: ./.github/actions/hermit

      - name: Run GCP integration tests
        uses: ./.github/actions/gcp-ci
        with:
          elk-version: ${{ env.ELK_VERSION }}
          workload-identity-provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service-account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          gcp-project-id: 'elastic-security-test'
          gcp-account-type: 'single-account'

  upload-allure-results:
    needs:
      - ci-azure
      - ci-cnvm
      - ci-gcp
    name: Upload integration tests results
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-ci-gcp
          path: tests/allure/results/
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-ci-cnvm
          path: tests/allure/results/
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          name: allure-results-ci-azure
          path: tests/allure/results/
          merge-multiple: true
      - name: log
        run: ls -laR
