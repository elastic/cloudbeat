name: Cloudbeat-CI

on:
  pull_request_target:
    branches:
      - main
    types: [assigned, opened, synchronize, reopened]


env:
  K8S_MANIFEST_DIR: deploy/k8s/kustomize/base
  GO_VERSION: 1.17.2

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ (github.event.pull_request_target || github.event.pull_request).head.repo.full_name }}
          ref: ${{ (github.event.pull_request_target || github.event.pull_request).head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: cache go dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
      
      - name: build cloudbeat
        run: make

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Build dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.event.pull_request.head.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build cloudbeat-docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: cloudbeat:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          outputs: type=docker,dest=/tmp/cloudbeat-${{ github.event.pull_request.head.sha }}.tar

      - name: Build pytest-docker
        uses: docker/build-push-action@v2
        with:
          context: ./tests/.
          push: false
          tags: cloudbeat-test:latest
          cache-from: type=local,mode=max,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          outputs: type=docker,dest=/tmp/pytest-${{ github.event.pull_request.head.sha }}.tar
      
      - name: Cache dockers images
        uses: actions/cache@v2
        with:
          path: /tmp/*.tar
          key: ${{ runner.os }}-dockers-cache-${{ github.event.pull_request.head.sha }}
          restore-keys: |
            ${{ runner.os }}-dockers-cache-

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  Integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ (github.event.pull_request_target || github.event.pull_request).head.repo.full_name }}
          ref: ${{ (github.event.pull_request_target || github.event.pull_request).head.sha }}

      - uses: azure/setup-helm@v1
        id: install

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          config: deploy/k8s/kind/kind-config.yaml
          cluster_name: kind-mono 

      - name: Wait for build to succeed
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          check-name: Build
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-conclusions: success
          wait-interval: 10

      - name: Cache dockers images
        uses: actions/cache@v2
        with:
          path: /tmp/*.tar
          key: ${{ runner.os }}-dockers-cache-${{ github.event.pull_request.head.sha }}
          restore-keys: |
            ${{ runner.os }}-dockers-cache-

      - name: Load images to kind
        run: |
          kind load image-archive /tmp/cloudbeat-${{ github.event.pull_request.head.sha }}.tar --name=kind-mono & kind load image-archive /tmp/pytest-${{ github.event.pull_request.head.sha }}.tar --name=kind-mono
          rm -rf /tmp/*.tar

      - name: Deploy tests Helm chart
        run: |
          helm upgrade --wait --install --values tests/deploy/values/ci.yml --namespace kube-system --kube-context kind-kind-mono cloudbeat-tests  tests/deploy/k8s-cloudbeat-tests/ 

      - name: Sleep for 100s
        uses: juliangruber/sleep-action@v1
        with:
          time: 100s

      - name: Run Tests
        id: run_tests 
        run: |
          helm test cloudbeat-tests --namespace kube-system --kube-context kind-kind-mono --logs 2>&1 | tee test.log
          result_code=${PIPESTATUS[0]}
          SUMMARY=$(cat test.log | sed -n '/summary/,/===/p')
          echo "summary<<EOF" >> "$GITHUB_ENV"
          echo "$SUMMARY" >> "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"
          exit $result_code

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: failure()
        with:
          limit-access-to-actor: true

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: tests/allure/results
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Comment test success result
        uses: marocchino/sticky-pull-request-comment@v2
        if: always()
        with:
          header: Test Results
          recreate: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ## Cloudbeat CI :robot:
            Integration tests status: ${{ steps.run_tests.outcome }}
            Tests Summary:
            ```python
            ${{env.summary}}
            ```
            Link to detailed report: https://${{ github.repository_owner }}.github.io/cloudbeat/${{ github.run_number }}

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ (github.event.pull_request_target || github.event.pull_request).head.repo.full_name }}
          ref: ${{ (github.event.pull_request_target || github.event.pull_request).head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Mage Check
        uses: magefile/mage-action@v1.6.0
        with:
          args: check

      - name: Mage check license headers
        uses: magefile/mage-action@v1.6.0
        with:
          args: checkLicenseHeaders

      - name: Unit-Test Cloudbeat
        run: |
          GOOS=linux go test ./...

      - name: Get diff k8s manifests
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: ${{ env.K8S_MANIFEST_DIR }}/**

      - name: Run K8s manifest tests
        if: env.GIT_DIFF
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kubeval: v0.16.1
          command: |
            echo "===== run kubeval"
            kubeval --strict ${{ env.K8S_MANIFEST_DIR }}/cloudbeat-ds.yaml
