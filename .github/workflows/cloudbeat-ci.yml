name: Cloudbeat-CI

on:
  pull_request:
    branches:
      - main
      - '[0-9]+.[0-9]+'
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - '[0-9]+.[0-9]+'
env:
  CONTAINER_SUFFIX: ${{ github.run_id }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Init Hermit
        run: ./bin/hermit env -r >> $GITHUB_ENV

      - name: cache go dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: build cloudbeat binary
        uses: magefile/mage-action@v2
        with:
          version: latest
          args: build

      - name: build opa bundle
        uses: magefile/mage-action@v2
        with:
          version: latest
          args: BuildOpaBundle

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Build dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.workflow }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build cloudbeat-docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: cloudbeat:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          outputs: type=docker,dest=/tmp/cloudbeat-${{ env.CONTAINER_SUFFIX }}.tar

      - name: Build pytest-docker
        uses: docker/build-push-action@v2
        with:
          context: ./tests/.
          push: false
          tags: cloudbeat-test:latest
          cache-from: type=local,mode=max,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          outputs: type=docker,dest=/tmp/pytest-${{ env.CONTAINER_SUFFIX }}.tar

      - name: Cache docker images
        uses: actions/cache@v2
        with:
          path: /tmp/*.tar
          key: ${{ runner.os }}-dockers-cache-${{ env.CONTAINER_SUFFIX }}
          restore-keys: |
            ${{ runner.os }}-dockers-cache-

      - name: Move cache
        run: |
          chmod +x ./.ci/scripts/gh-cache.sh
          ./.ci/scripts/gh-cache.sh
        shell: bash

  Test_Matrix:
    name: ${{ matrix.test-target }}-${{ matrix.range }}-tests
    needs: Build
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        # test-targets chosen by stabillity and runtime.Only pre_merge will be set as mandatory
        test-target: [process_api_server_rules]
        range: ['0..1', '1..2', '2..3', '3..4', '4..5', '5..6', '6..7', '7..8', '8..9', '9..10', '10..11', '11..12', '12..13', '13..14', '14..15', '15..16', '16..17', '17..18', '18..19', '19..20', '20..21', '21..22', '22..23', '23..24', '24..25', '25..26', '26..27', '27..28', '28..29', '29..30', '30..31', '31..32', '32..33', '33..34', '34..35', '35..36', '36..37', '37..38', '38..39', '39..40', '40..41', '41..42', '42..43', '43..44', '44..45', '45..46', '46..47', '47..48', '48..49', '49..50', '50..51', '51..52', '52..53', '53..54', '54..55', '55..56', '56..57', '57..58', '58..59', '59..60', '60..61', '61..62', '62..63', '63..64', '64..65', '65..66', '66..67', '67..68', '68..69', '69..70', '70..71', '71..72', '72..73', '73..74', '74..75']
      fail-fast: false
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Init Hermit
        run: ./bin/hermit env -r >> $GITHUB_ENV

      - name: Create k8s Kind Cluster
        run: |
          just create-kind-cluster

      - name: Cache docker images
        uses: actions/cache@v2
        with:
          path: /tmp/*.tar
          key: ${{ runner.os }}-dockers-cache-${{ env.CONTAINER_SUFFIX }}
          restore-keys: |
            ${{ runner.os }}-dockers-cache-${{ env.CONTAINER_SUFFIX }}

      - name: Load images to kind
        run: |
          ./.ci/scripts/kind-images.sh ${{ env.CONTAINER_SUFFIX }} kind-multi
        shell: bash

      - name: Deploy tests Helm chart
        id: deploy_helm
        run: |
          just deploy-tests-helm tests/deploy/values/ci.yml ${{ matrix.test-target }} ${{ matrix.range }}

      - name: Run Tests
        id: run_tests
        run: |
          ./.ci/scripts/integration-tests.sh ${{ matrix.test-target }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: allure_results-${{ matrix.test-target}}
          path: tests/allure/results/

      - name: clear cache
        id: clear_cache
        if: success()
        run: rm -rf /tmp/${{ env.CONTAINER_SUFFIX }}.tar
