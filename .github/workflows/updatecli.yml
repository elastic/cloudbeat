---
name: Update Dependencies with Updatecli

# TESTING
# This workflow depends on elastic/apm-pipeline-library/.github/actions/updatecli, which is tricky to test
#
# TEST LOCALLY (with act):
# 1. Logging to github with `gh auth`
#
# 2. Configure the job you want to run by replacing the step `elastic/apm-pipeline-library/.github/actions/updatecli` by
#       ```
#      - name: Install Updatecli in the runner
#        uses: updatecli/updatecli-action@v2
#      - name: Run Updatecli in apply mode
#        run: "updatecli apply --debug --config .ci/updatecli/updatecli.d/update-beats.yml --values .ci/updatecli/values.yml"
#        env:
#          GITHUB_TOKEN: "${{ secrets.MY_GITHUB_TOKEN }}"
#          GIT_USER: foo
#       ```
#
# 3. Pass the secret `MY_GITHUB_TOKEN` in the act command. e.g:
#       ```
#       act --container-architecture linux/amd64 \
#       -s MY_GITHUB_TOKEN="$(gh auth token)" \
#       --workflows ./.github/workflows/updatecli.yml \
#       schedule
#       ```
#
# TEST ON YOUR FORK:
# It doesn't work in forks because of lacking vault permissions

on:
  workflow_dispatch:
  schedule:
    # Run all jobs on the 1st of each month at 00:00 UTC.
    - cron: "0 0 1 * *"

permissions:
  contents: read

env:
  JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  updatecli:
    name: "[${{ matrix.git-branch }}] Update ${{ matrix.pipeline-name }} dependencies"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pipeline-name: [ beats, golang, hermit, mods ]
        git-branch: [ main ]
    steps:
      # Disk cleanup
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be  # v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: true
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Init Hermit
        run: ./bin/hermit env -r >> $GITHUB_ENV
      - name: Install Updatecli in the runner
        uses: updatecli/updatecli-action@57aa8966d4d775cb1420b90c270ba97a4b5abe47 # v2.93.0
      - name: Run Updatecli in Apply mode
        run: updatecli apply --config .ci/updatecli/updatecli.d/update-${{ matrix.pipeline-name }}.yml --values .ci/updatecli/values.yml
        env:
          GIT_BRANCH: ${{ matrix.git-branch }}
          GIT_USER: "Cloud Security Machine"
          GITHUB_TOKEN: ${{ secrets.CLOUDSEC_MACHINE_TOKEN }}

  active-branches:
    name: Build active branches matrix JSON
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.mk.outputs.matrix }}
    steps:
      - name: Fetch active branches
        id: mk
        run: |
          MATRIX_JSON="$(curl -s https://artifacts.elastic.co/releases/TfEVhiaBGqR64ie0g0r0uUwNAbEQMu1Z/future-releases/stack.json | jq -Mc '[ .releases[] | select(.active_release == true) | .branch | select(. != "main" and . != "7.17") ]')"
          echo "matrix=$MATRIX_JSON" >> "$GITHUB_OUTPUT"

  updatecli-backport:
    name: "[${{ matrix.git-branch }}] Update ${{ matrix.pipeline-name }} dependencies - backport"
    runs-on: ubuntu-latest
    needs: active-branches
    strategy:
      fail-fast: false
      matrix:
        pipeline-name: [ golang, beats ]
        git-branch: ${{ fromJSON(needs.active-branches.outputs.matrix) }}
    steps:
      # Disk cleanup
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be  # v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: true
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Init Hermit
        run: ./bin/hermit env -r >> $GITHUB_ENV
      - name: Install Updatecli in the runner
        uses: updatecli/updatecli-action@57aa8966d4d775cb1420b90c270ba97a4b5abe47 # v2.93.0
      - name: Run Updatecli in Apply mode
        run: updatecli apply --config .ci/updatecli/updatecli.d/update-${{ matrix.pipeline-name }}.yml --values .ci/updatecli/values.yml
        env:
          GIT_BRANCH: ${{ matrix.git-branch }}
          GIT_USER: "Cloud Security Machine"
          GITHUB_TOKEN: ${{ secrets.CLOUDSEC_MACHINE_TOKEN }}
