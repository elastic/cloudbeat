name: UnitTests

on:
  pull_request:
    branches:
      - main
      - '[0-9]+.[0-9]+'
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

env:
  K8S_MANIFEST_DIR: deploy


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Init Hermit
        run: ./bin/hermit env -r >> $GITHUB_ENV

      - name: Mage Check
        run: mage check

      - name: Mage checkLicenseHeaders
        run: mage checkLicenseHeaders

      - name: Unit-Test Cloudbeat
        run: |
          GOOS=linux go test ./...

  manifest_tests:
    name: Manifest Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Get diff k8s manifests
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: ${{ env.K8S_MANIFEST_DIR }}/**

      - name: Run K8s manifest tests
        if: env.GIT_DIFF
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.4
          kubeval: v0.16.1
          command: |
            kubeval --strict -d ${{ env.K8S_MANIFEST_DIR }} --ignore-missing-schemas --ignored-filename-patterns kustomization,kind,patch,cloudbeat --skip-kinds ClusterConfig

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ (github.event.pull_request_target || github.event.pull_request).head.repo.full_name }}
          ref: ${{ (github.event.pull_request_target || github.event.pull_request).head.sha }}

      - name: Go linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=10m --whole-files

  dependency-review:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v2
