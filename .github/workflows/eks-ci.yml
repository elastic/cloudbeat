name: EKS-CI

on:
  # On demand execution of workflow will run all suites.
  workflow_dispatch:
    inputs:
      test-targets:
        required: true
        description: "Specify test markers to run"
        default: '[\"pre_merge\"]'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CONTAINER_SUFFIX: ${{ github.run_id }}
  TEST_TARGETS_DEFAULT: '[\"pre_merge\"]'
  AWS_REGION: eu-west-2
  REPORTS_DIR: tests/allure/results/
  KUBE_NAMESPACE: kube-system

permissions:
  actions: read
  checks: write
  statuses: read

jobs:
  Setup:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    timeout-minutes: 15
    steps:
      - id: set-default-matrix
        env:
          TEST_TARGETS: ${{ env.TEST_TARGETS_DEFAULT }}
        run: |
          echo "TEST_MATRIX=$TEST_TARGETS" >> $GITHUB_ENV

      - id: Dispatch
        if: github.event_name == 'workflow_dispatch'
        env:
          TEST_TARGETS: ${{ github.event.inputs.test-targets }}
        run: echo "TEST_MATRIX=${TEST_TARGETS}" >> $GITHUB_ENV

      - id: set-matrix
        run: echo "matrix=${{ env.TEST_MATRIX}}" >> $GITHUB_OUTPUT

  Test_Matrix:
    needs: ["Setup"]
    strategy:
      fail-fast: false
      matrix:
        include:
          - test-target: pre_merge
            range: ""
            values_file: tests/deploy/values/ci-eks.yml
            k8s_context: "test-eks-config-1"
    name: ${{ matrix.test-target }}-tests
    runs-on: ubuntu-20.04
    timeout-minutes: 90
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # Setup all required tools
      - name: Init Hermit
        run: ./bin/hermit env -r >> $GITHUB_ENV

      - name: Get kubeconfig and select context
        if: success()
        run: |
          aws eks update-kubeconfig --name ${{ matrix.k8s_context }} --region ${{ env.AWS_REGION }} --alias ${{ matrix.k8s_context }}
          echo 'KUBE_CONFIG_DATA=$(cat ~/.kube/config | base64)' >> $GITHUB_ENV
          kubectl config use-context ${{ matrix.k8s_context }}
          kubectl config set-context --current --namespace=${{ env.KUBE_NAMESPACE }}

      - name: Deploy tests Helm chart
        id: deploy_helm
        if: success()
        run: |
          just deploy-tests-helm ${{ matrix.test-target }} ${{ matrix.values_file }} ${{ matrix.range }}

      - name: Execute tests
        id: run_tests
        if: success()
        run: |
          just run-tests ${{ matrix.test-target }} ${{ matrix.k8s_context }}

      - name: Copy test results
        id: copy_results
        if: always()
        run: |
          NODE=$(kubectl get po test-pod-v1 -o jsonpath='{.spec.nodeName}')
          RESULTS_POD=$(kubectl get po -l k8s-app=eks-results --field-selector spec.nodeName=$NODE -o jsonpath='{.items[*].metadata.name}')
          kubectl cp $RESULTS_POD:/reports ${{ env.REPORTS_DIR }}
          kubectl exec $RESULTS_POD -- sh -c 'rm -rf /reports/*'

      - name: Upload Test Results
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: allure_results-${{ matrix.test-target}}
          path: ${{ env.REPORTS_DIR }}

      - name: Purge tests environment
        id: purge_helm
        if: always()
        run: |
          just purge-tests

  publish_results:
    name: Publish Results
    needs: Test_Matrix
    if: always()
    runs-on: ubuntu-20.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Extract Artifacts
        run: |
          mkdir -p tests/allure/results
          find artifacts/ -type f -print0 | xargs -0 mv -t tests/allure/results

      - name: Publish allure report
        if: always()
        uses: andrcuns/allure-publish-action@v1.0.1
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_REGION: eu-west-1
        with:
          storageType: s3
          resultsGlob: "${{ env.REPORTS_DIR }}*"
          updatePr: actions
          collapseSummary: false
          summary: suites
          summaryTableType: markdown
          copyLatest: true
          bucket: csp-allure-reports
          prefix: allure_reports/cloudbeat/${{ github.ref_name }}
          ignoreMissingResults: true
