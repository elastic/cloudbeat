name: Weekly environment deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        options:
          - weekly environment
      benchmark:
        description: 'The benchmark you wish to install'
        type: choice
        options:
          - Kubernetes Vanilla(k8s-vanilla)
      alerts:
        description: 'Install alerts'
        required: false
        type: boolean
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CONTAINER_SUFFIX: ${{ github.run_id }}
  AWS_REGION: eu-west-2
  KUBE_NAMESPACE: kube-system
  WORKING_DIR: deploy/cloud
  SLACK_MESSAGE_PAYLOAD_PATH: ".github/workflows/weekly-environment-slack-payload.json"

jobs:
  terraform:
    name: Deploy KSPM/CSPM cloud environment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
           terraform_version: 1.3.5
           terraform_wrapper: false

#      - name: Terraform fmt
#        id: fmt
#        run: terraform fmt -check
#        continue-on-error: true
#
#      - name: Terraform Validate
#        id: validate
#        run: terraform validate -no-color
      - name: Terraform Init
        id: init
        run: terraform init -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -target=module.ec_deployment -no-color
        env:
          TF_VAR_ec_api_key: ${{ secrets.TF_VAR_EC_API_KEY }}

#      - name: Terraform Apply
#        id: apply
#        run: terraform apply -auto-approve -target=module.ec_deployment -no-color
#        env:
#          TF_VAR_ec_api_key: ${{ secrets.TF_VAR_EC_API_KEY }}
#
#      - name: Call terraform output url parameter
#        run: |
#            output=$(terraform output kibana_url)
#            echo $output
#
#      - name: Call terraform output no parameter
#        run: |
#          output1=$(terraform output )
#          echo "::set-output name=tf_output::$tf_output"
#          echo $output1
#
#      - name: Get terraform output
#        id: terraform_output
#        run: |
#          output1=$(terraform output)
#          echo "::set-output name=tf_output::$tf_output"
#          echo $output1

      - name: Terraform Output
        run: terraform output -json > output.json

#      Once https://github.com/slackapi/slack-github-action/issues/84 will be resolved we can push the payload to a different file
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "A new deployment job has been triggered",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "Environment",
                      "value": "${{ github.event.inputs.environment }}",
                      "short": true
                    },
                    {
                      "title": "Benchmark",
                      "value": "${{ github.event.inputs.benchmark }}",
                      "short": true
                    },
                    {
                      "title": "Alerts",
                      "value": "${{ github.event.inputs.alerts }}",
                      "short": true
                    },
                    {
                      "title": "Log level",
                      "value": "${{ github.event.inputs.logLevel }}",
                      "short": true
                    },
                    {
                      "title": "Kibana URL",
                      "value": "${{ terraform output }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          Ofir: 'Lapid11'
