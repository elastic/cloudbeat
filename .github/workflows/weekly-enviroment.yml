name: Weekly environment deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: choice
        options:
          - weekly environment
      logLevel:
        description: 'Log level'
        required: true
        default: 'INFO'
        type: choice
        options:
          - TRACE
          - DEBUG
          - INFO
          - WARN
          - ERROR

env:
  WORKING_DIR: deploy/weekly-environment
  SCRIPTS_DIR: deploy/weekly-environment/scripts/benchmarks/kspm_vanilla
  TF_VAR_ec_api_key: ${{ secrets.WEEKLY_ENVIRONMENT_EC_API_KEY }}
  TF_VAR_environment: ${{ github.event.inputs.logLevel }}
  TF_LOG: ${{ github.event.inputs.logLevel }}
  TF_VAR_stack_version: 8.7.0-SNAPSHOT

jobs:
  terraform:
    name: Deploy KSPM cloud environment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init Hermit
        run: ./bin/hermit env -r >> $GITHUB_ENV
        working-directory: ./

      - name: Terraform Init
        run: terraform init -no-color

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Deploy Elastic Cloud
        run: terraform apply --auto-approve

      - name: Set terraform output as env variable
        run: |
          echo "KIBANA_URL=$(terraform output kibana_url)" >> $GITHUB_ENV

      - name: Set sensitive terraform output as env variable
        run: |
          export ELASTICSEARCH_USERNAME=$(terraform output elasticsearch_username)
          echo "::add-mask::$ELASTICSEARCH_USERNAME"
          echo "ELASTICSEARCH_USERNAME=$ELASTICSEARCH_USERNAME" >> $GITHUB_ENV

          export ELASTICSEARCH_PASSWORD=$(terraform output elasticsearch_password)
          echo "::add-mask::$ELASTICSEARCH_PASSWORD"
          echo "ELASTICSEARCH_PASSWORD=$ELASTICSEARCH_PASSWORD" >> $GITHUB_ENV

      - name: Install KSPM vanilla integration
        working-directory: ${{ env.SCRIPTS_DIR }}
        run: |
          ./install-kspm-vanilla-integration.sh ${{ env.KIBANA_URL }} ${{ env.ELASTICSEARCH_PASSWORD }}

      - name: Deploy agent on EC2
        working-directory: ${{ env.SCRIPTS_DIR }}
        run: |
          echo -e "${{ secrets.WEEKLY_ENVIRONMENT_EC2_PRIVATE_KEY }}" > weekly-key.pem
          chmod 600 weekly-key.pem
          # Copy the manifest file to the EC2 instance
          scp -o StrictHostKeyChecking=no -v -i weekly-key.pem manifest.yaml "ubuntu@${{ secrets.WEEKLY_ENVIRONMENT_EC2_PUBLIC_IP }}:~/."
          # Apply the manifest file
          ssh -o StrictHostKeyChecking=no -v -i weekly-key.pem "ubuntu@${{ secrets.WEEKLY_ENVIRONMENT_EC2_PUBLIC_IP }}" "kubectl apply -f manifest.yaml"

      # Once https://github.com/slackapi/slack-github-action/issues/84 will be resolved we can push the payload to a different file
      - name: Send custom JSON data to Slack workflow
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "A new deployment job has been triggered",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "Environment",
                      "value": "${{ github.event.inputs.environment }}",
                      "short": true
                    },
                    {
                      "title": "Log level",
                      "value": "${{ github.event.inputs.logLevel }}",
                      "short": true
                    },
                    {
                      "title": "Kibana URL",
                      "value": ${{ env.KIBANA_URL }},
                      "short": false
                    },
                    {
                      "title": "ElasticSearch username",
                      "value": ${{ env.ELASTICSEARCH_USERNAME }},
                      "short": false
                    },
                    {
                      "title": "ElasticSearch password",
                      "value": ${{ env.ELASTICSEARCH_PASSWORD }},
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
