name: Weekly environment deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        options:
          - weekly environment
      benchmark:
        description: 'The benchmark you wish to install'
        type: choice
        options:
          - Kubernetes Vanilla(k8s-vanilla)
      alerts:
        description: 'Install alerts'
        required: false
        type: boolean
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CONTAINER_SUFFIX: ${{ github.run_id }}
  AWS_REGION: eu-west-2
  REPORTS_DIR: tests/allure/results/
  KUBE_NAMESPACE: kube-system
  WORKING_DIR: deploy/cloud

jobs:
  terraform:
    name: Deploy KSPM/CSPM cloud environment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
           terraform_version: 1.3.5
           terraform_wrapper: false

#      - name: Terraform fmt
#        id: fmt
#        run: terraform fmt -check
#        continue-on-error: true
#
#      - name: Terraform Validate
#        id: validate
#        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -target=module.ec_deployment -no-color
        continue-on-error: true
        env:
          TF_VAR_ec_api_key: ${{ secrets.TF_VAR_EC_API_KEY }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -target=module.ec_deployment -no-color
        continue-on-error: true
        env:
          TF_VAR_ec_api_key: ${{ secrets.TF_VAR_EC_API_KEY }}

      - name: Call terraform output url parameter
        run: |
            output=$(terraform output elasticsearch_url)
            echo $elasticsearch_url

      - name: Call terraform output no parameter
        run: |
          output1=$(terraform output )
          echo $elasticsearch_url1

      - name: Comment test success result
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Test Results
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ## Weekly environment :man_dancing:
            A new environment has been deployed to the elastic cloud. :tada:
            You can access it at _______.
            :warning: This environment will be deleted in 7 days.

#  terraform apply --auto-approve -target "module.ec_deployment"
