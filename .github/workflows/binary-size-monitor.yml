name: Binary Size Monitor

on:
  pull_request:
    branches:
      - main
      - "[0-9]+.[0-9]+"
    types: [opened, synchronize, reopened]

env:
  # Binary size threshold in MiB
  SIZE_THRESHOLD_MIB: 5

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  binary-size-monitor:
    name: Monitor Binary Size
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Check out target branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.base_ref }}
          clean: true

      - name: Hermit Environment
        uses: ./.github/actions/hermit
        with:
          init-tools: 'false'

      - name: Build target branch binary
        run: |
          echo "Building target branch binary..."
          mage build
          mv cloudbeat /tmp/cloudbeat-main

      - name: Check out PR
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          clean: true

      - name: Build PR branch binary
        run: |
          mage build
          mv cloudbeat /tmp/cloudbeat-pr

      - name: Get binary sizes and compare
        id: size-check
        run: |
          # Get file sizes
          PR_SIZE=$(stat -c%s /tmp/cloudbeat-pr)
          MAIN_SIZE=$(stat -c%s /tmp/cloudbeat-main)

          echo "PR binary size: $PR_SIZE bytes"
          echo "Target binary size: $MAIN_SIZE bytes"

          # Calculate human-readable sizes in MiB (1024^2)
          PR_SIZE_MIB=$(echo "scale=2; $PR_SIZE/1024/1024" | bc)
          MAIN_SIZE_MIB=$(echo "scale=2; $MAIN_SIZE/1024/1024" | bc)

          echo "PR binary size: ${PR_SIZE_MIB} MiB"
          echo "Target binary size: ${MAIN_SIZE_MIB} MiB"

          # Calculate size difference and percentage
          if [ $MAIN_SIZE -eq 0 ]; then
            echo "Error: Target branch binary size is 0"
            exit 1
          fi

          SIZE_DIFF=$((PR_SIZE - MAIN_SIZE))
          SIZE_DIFF_MIB=$(echo "scale=2; $SIZE_DIFF/1024/1024" | bc)
          PERCENTAGE=$(echo "scale=2; $SIZE_DIFF * 100 / $MAIN_SIZE" | bc)

          echo "Size difference: $SIZE_DIFF bytes (${SIZE_DIFF_MIB} MiB)"
          echo "Percentage change: ${PERCENTAGE}%"

          # Store values for later steps
          echo "pr_size=$PR_SIZE" >> $GITHUB_OUTPUT
          echo "main_size=$MAIN_SIZE" >> $GITHUB_OUTPUT
          echo "pr_size_mib=$PR_SIZE_MIB" >> $GITHUB_OUTPUT
          echo "main_size_mib=$MAIN_SIZE_MIB" >> $GITHUB_OUTPUT
          echo "size_diff=$SIZE_DIFF" >> $GITHUB_OUTPUT
          echo "size_diff_mib=$SIZE_DIFF_MIB" >> $GITHUB_OUTPUT
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT

          # Check if size increase exceeds 5MiB threshold
          if (( $(echo "$SIZE_DIFF_MIB > $SIZE_THRESHOLD_MIB" | bc -l) )); then
            echo "threshold_exceeded=1" >> $GITHUB_OUTPUT
            echo "significant_increase=1" >> $GITHUB_OUTPUT
          else
            echo "threshold_exceeded=0" >> $GITHUB_OUTPUT
            echo "significant_increase=0" >> $GITHUB_OUTPUT
          fi

          # Also store absolute percentage for display
          ABS_PERCENTAGE=$(echo "$PERCENTAGE" | sed 's/-//')
          echo "abs_percentage=$ABS_PERCENTAGE" >> $GITHUB_OUTPUT

      - name: Comment on PR with size information
        if: steps.size-check.outputs.significant_increase == '1'
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2
        with:
          header: Binary Size Monitor
          message: |
            ## üìä Binary Size Monitor Report

            | Branch | Size (MiB) | Size (bytes) |
            |--------|-------------|-------------|
            | **PR Branch** | ${{ steps.size-check.outputs.pr_size_mib }} MiB | ${{ steps.size-check.outputs.pr_size }} bytes |
            | **Target Branch** | ${{ steps.size-check.outputs.main_size_mib }} MiB | ${{ steps.size-check.outputs.main_size }} bytes |
            | **Difference** | ${{ steps.size-check.outputs.size_diff_mib }} MiB | ${{ steps.size-check.outputs.size_diff }} bytes |

            **Size Change:** ${{ steps.size-check.outputs.percentage }}% | **Absolute Change:** ${{ steps.size-check.outputs.size_diff_mib }} MiB

            ${{ steps.size-check.outputs.threshold_exceeded == '1' && format('‚ö†Ô∏è **WARNING:** Binary size increased by {0} MiB, which exceeds the {1} MiB threshold!', steps.size-check.outputs.size_diff_mib, env.SIZE_THRESHOLD_MIB) || '‚úÖ Binary size change is within acceptable limits.' }}

      - name: Fail job if size threshold exceeded
        if: steps.size-check.outputs.threshold_exceeded == '1'
        run: |
          echo "‚ùå Binary size increased by ${{ steps.size-check.outputs.size_diff_mib }} MiB (${{ steps.size-check.outputs.percentage }}%), exceeding the ${{ env.SIZE_THRESHOLD_MIB }} MiB threshold"
          echo "This indicates a significant increase in the cloudbeat binary size."
          echo "Please review your changes to understand the size impact."
          exit 1
