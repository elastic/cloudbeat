exclude: (bin/(activate-)?hermit)|(scripts/make/gimme/.*)
repos:
  ## General
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-merge-conflict
      - id: check-added-large-files
      - id: check-yaml
        args: [--allow-multiple-documents, --unsafe]
        exclude: (^tests/deploy/k8s-cloudbeat-tests/templates/.*)$
      - id: check-json
      - id: check-executables-have-shebangs
      - id: trailing-whitespace
        exclude: (cloudbeat.reference.yml|security-policies/bundle/.*)

      ## Security
      - id: detect-private-key

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.1.0
    hooks:
      - id: add-trailing-comma

  ## Golang hooks
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.55.2
    hooks:
      - id: golangci-lint

  ## Python
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: flake8 ./tests/ ./fleet_api/ ./.ci/scripts ./github/actions
        files: ^(.ci/scripts|.github/actions|tests|deploy/test-environments/fleet_api)/

  - repo: https://github.com/pycqa/pylint
    rev: v3.0.3
    hooks:
      - id: pylint
        args: [
            "-rn", # Only display messages
            "--rcfile=tests/pylintrc", # Link to your config file
          ]
        # TODO: Apply pylint in security-policies
        exclude: security-policies.*

  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black

  - repo: local
    hooks:
      - id: rain
        name: format with rain
        language: system
        entry: rain
        args: [
          "fmt",
          "-w",
        ]
        files: deploy/cloudformation/.*yml

  - repo: https://github.com/awslabs/cfn-python-lint
    rev: v0.83.8
    hooks:
      - id: cfn-python-lint
        files: deploy/cloudformation/.*.yml

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: shfmt
        args: ["-i", "4"]
      - id: shellcheck
        files: (deploy/.*sh|scripts/publish_cft.sh|.ci/scripts/.*sh)
        exclude: deploy/deployment-manager/.*sh

  - repo: local
    hooks:
      - id: mage-config
        name: mage config
        entry: bash -c 'mage config'
        language: system
        files: (^_meta\/.*|^cloudbeat.*yml)$
        pass_filenames: false
      - id: mage-license-headers
        name: mage AddLicenseHeaders
        entry: bash -c 'mage AddLicenseHeaders'
        language: system
        files: .*.go
        pass_filenames: false
      - id: go-test
        name: Run short unit tests
        entry: bash -c 'go test -short -timeout 100ms ./...'
        language: system
        files: .*.go
        pass_filenames: false
      - id: go-mod-tidy
        name: Run go mod tidy
        entry: bash -c 'go mod tidy'
        language: system
        files: (go.mod|go.sum)
        pass_filenames: false

  - repo: local
    hooks:
      - id: opa-fmt
        name: OPA fmt
        description: Formats Rego policy using opa fmt
        entry: opa fmt
        args: [ -w ]
        language: system
        files: (\.rego)$

      - id: opa-check
        name: OPA check
        description: Check syntax of staged Rego files
        entry: opa check
        args: [ -S, './security-policies/bundle/compliance' ]
        pass_filenames: false
        language: system
        files: (\.rego)$

      - id: opa-test
        name: OPA test
        description: Runs OPA unit tests on rego source files
        entry: opa test
        args: [ -b, './security-policies/bundle' ]
        pass_filenames: false
        language: system
        files: (\.rego)$

      - id: update-rules-status
        name: Update rule status
        description: Update rule status in rules_table.md
        require_serial: true
        entry: poetry run -C security-policies python security-policies/dev/update_rule_status.py
        pass_filenames: false
        language: system
        files: (\.rego)$

      - id: update-rule-metadata
        name: Update rule metadata
        description: Update rule status in rules_table.md
        require_serial: true
        entry: poetry run -C security-policies python security-policies/dev/generate_rule_metadata.py
        pass_filenames: false
        language: system
        files: (\.rego)$

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [ '--disable',
                MD013,  # Line length can be ignored for now
                MD033,  # Allow inline HTML
                MD046,  # Allow code blocks to be fenced with backticks
                MD041,  # Allow multiple top level headers
                '--' ]
        # TODO: Apply makrdownlint in other files
        files: security-policies/.*\.(md|markdown)$

  - repo: https://github.com/StyraInc/regal
    rev: v0.15.0
    hooks:
      - id: regal-lint
        args: [security-policies/bundle]
        pass_filenames: false
